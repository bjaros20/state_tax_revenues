#Attempt to Get Revenue in R
install.packages("readxl")
install.packages("tidyr")
install.packages("dplyr")
install.packages("did")
install.packages("tidyverse")
install.packages("lmtest")
library(readxl)
library(tidyr)
library(dplyr)
library(did)
library(tidyverse)
library(lmtest)
Census State and Local Data- Tax Foundation
# Census State and Local Data- Tax Foundation
install.packages("readxl")
install.packages("tidyr")
install.packages("dplyr")
install.packages("tidyverse")
install.packages("xlsx")
library(readxl)
library(tidyr)
library(dplyr)
library(tidyverse)
library(xlsx)
#Attempt to Get all the Revenue in One Excel File
library(readxl)
library(tidyr)
library(dplyr)
library(tidyverse)
#set working directory
setwd("~/Documents/GitHub/Clean")
#Create Vector of State Acronyms:
state_acronyms <- c("AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA",
"HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD",
"ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH",
"NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC",
"SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY")
# loop through the state acronyms and read in the corresponding Excel file
state_dfs <- list()  # Initialize a list to store the state dataframes
for (state in state_acronyms) {
file_name <- paste(state, ".xls", sep="")
sheet_name <- "Annual"
state_dfs[[state]] <- read_excel(file_name, sheet=sheet_name)
}
# Access the Alaska dataframe by its acronym
AK_df <- state_dfs[["AK"]]
#set working directory
setwd("~/Documents/GitHub/Clean/SALT_FRED_Files_Excel")
for (state in state_acronyms) {
file_name <- paste(state, ".xls", sep="")
sheet_name <- "Annual"
state_dfs[[state]] <- read_excel(file_name, sheet=sheet_name)
}
# Access the Alaska dataframe by its acronym
AK_df <- state_dfs[["AK"]]
View(AK_df)
View(state_dfs)
# Create an empty dataframe to store the state-year panel
state_year_panel <- data.frame(matrix(NA, nrow = length(state_acronyms), ncol = length(unique(AK_df$DATE))))
View(state_year_panel)
# Assign column names to the state-year panel using the unique years from AK_df$DATE
colnames(state_year_panel) <- unique(AK_df$DATE)
# Assign row names to the state-year panel using the state acronyms
rownames(state_year_panel) <- state_acronyms
# Loop through the state acronyms
for (state in state_acronyms) {
# Check if the state exists in the state_dfs list
if (state %in% names(state_dfs)) {
# Access the dataframe of the current state
state_df <- state_dfs[[state]]
View(state_year_panel)
View(state_year_panel)
View(AK_df)
View(AK_df)
View(state_dfs)
View(state_year_panel)
View(AK_df)
glimpse(AK_df)
glimpse(AK_df)
# Merge data frames in state_dfs on "DATE"
merged_df <- bind_rows(state_dfs, .id = "State") %>%
arrange(DATE)
print(merged_df)
# Merge data frames in state_dfs on "DATE"
merged_df <- bind_rows(state_dfs, .id = "State") %>%
arrange(DATE)
# Print the merged DataFrame
print(merged_df)
